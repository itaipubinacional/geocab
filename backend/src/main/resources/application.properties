# configura��es do spring security ----------------
security.blowfish = %$@#@!#g30cAA213#ck(398234

# Configura��es da autentica��o via OAuth2. Algumas dos valores das propriedades podem ser
# coletadas do endpoint de discovery do OpenID Connect. Caso o servidor suportar este endpoint
# ele pode ser acesado atrav�s da URL:
# - <endere�o do servidor IdP do OIDC>/.well-known/openid-configuration
security.oauth2.client.client-id= geocab-dev-becker
security.oauth2.client.client-secret= 1b32200c-fa6f-48f9-af06-dbd412a80dea
security.oauth2.client.access-token-uri= https://kchom.itaipu:9898/auth/realms/geocab/protocol/openid-connect/token
security.oauth2.client.user-authorization-uri= https://kchom.itaipu:9898/auth/realms/geocab/protocol/openid-connect/auth
security.oauth2.client.authentication-scheme=header
security.oauth2.client.client-authentication-scheme=header
security.oauth2.resource.user-info-uri= https://kchom.itaipu:9898/auth/realms/geocab/protocol/openid-connect/userinfo

# banco de dados ----------------------------------
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url= jdbc:postgresql://localhost:5432/desenvolvimento
spring.datasource.username= postgres
spring.datasource.password= postgres
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisDialect

# reposit�rio de arquivos -------------------------
files.repository.path= /tmp/geocab