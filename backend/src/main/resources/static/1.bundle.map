{"version":3,"sources":["webpack:///./src/app/data-source/data-source.module.ts","webpack:///./src/app/data-source/data-source.service.ts","webpack:///./src/app/data-source/data-source.component.ts","webpack:///./src/app/data-source/detail-data-source/detail-data-source.component.ts","webpack:///./src/app/data-source/list-data-sources/list-data-sources.component.ts","webpack:///./src/app/shared/model/data-source.ts","webpack:///./src/app/data-source/data-source.routes.ts","webpack:///./src/app/data-source/data-source.component.css","webpack:///./src/app/data-source/detail-data-source/detail-data-source.component.css","webpack:///./src/app/data-source/list-data-sources/list-data-sources.component.css","webpack:///./src/app/data-source/data-source.component.html","webpack:///./src/app/data-source/detail-data-source/detail-data-source.component.html","webpack:///./src/app/data-source/list-data-sources/list-data-sources.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAsC;AACkD;AAC5B;AACD;AACgC;AACjD;AACU;AAcpD;IAAA;IACA,CAAC;IAbD;QAAC,8EAAQ,CAAC;YACN,OAAO,EAAE;gBACL,2EAAY;gBACZ,mEAAW;gBACX,oFAAuB;aAC1B;YACD,YAAY,EAAE;gBACV,mFAAmB;gBACnB,gHAAwB;gBACxB,mHAAyB;aAC5B;SACJ,CAAC;;wBAAA;IAEF,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACrBuC;AAC8B;AACV;AACxB;AACc;AAGlD;IAEI,2BAAoB,IAAU,EAAU,WAAwB;QAA5C,SAAI,GAAJ,IAAI,CAAM;QAAU,gBAAW,GAAX,WAAW,CAAa;IAChE,CAAC;IAED,0CAAc,GAAd;QAAA,iBASC;QARG,+BAA+B;QAC/B,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,0BAA0B,EAAE,CAAC;QAC5D,IAAI,OAAO,GAAG,IAAI,6DAAc,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QAErD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uCAAuC,EAAE,OAAO,CAAC;aACjE,SAAS,EAAE;aACX,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,uBAAuB;aAC/C,KAAK,CAAC,aAAG,IAAI,YAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAArB,CAAqB,CAAC,CAAC;IAC7C,CAAC;IAED,6CAAiB,GAAjB,UAAkB,EAAU;QACxB,MAAM,CAAC,IAAI,OAAO,CAAa,iBAAO;YAClC,OAAO,CAAa;gBAChB,EAAE,EAAE,EAAE;gBACN,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,iFAAc,CAAC,GAAG;gBAC/B,GAAG,EAAE,OAAO;aACf,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAgB,GAAhB,UAAiB,UAAsB;QAAvC,iBASC;QARG,+BAA+B;QAC/B,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,0BAA0B,EAAE,CAAC;QAC5D,IAAI,OAAO,GAAG,IAAI,6DAAc,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QAErD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uCAAuC,EAAE,UAAU,EAAE,OAAO,CAAC;aAC9E,SAAS,EAAE;aACX,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,uBAAuB;aAC/C,KAAK,CAAC,aAAG,IAAI,YAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAArB,CAAqB,CAAC,CAAC;IAC7C,CAAC;IAEO,uCAAW,GAAnB,UAAoB,KAAqB;QACrC,oEAAoE;QACpE,IAAI,MAAc,CAAC;QACnB,EAAE,CAAC,CAAC,KAAK,YAAY,uDAAQ,CAAC,CAAC,CAAC;YAC5B,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;YAChC,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/C,MAAM,GAAM,KAAK,CAAC,MAAM,YAAM,KAAK,CAAC,UAAU,IAAI,EAAE,UAAI,GAAK,CAAC;QAClE,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC9D,CAAC;QACD,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAnDL;QAAC,gFAAU,EAAE;;yBAAA;IAoDb,wBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;AC1D8C;AACQ;AAQvD;IAEI;IACA,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAZL;QAAC,+EAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;YAC3B,mCAA2C;YAC3C,mCAA0C;YAC1C,SAAS,EAAE,CAAC,+EAAiB,CAAC;SACjC,CAAC;;2BAAA;IASF,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACjB8C;AACO;AACE;AACiB;AAOzE;IASI,mCAAoB,cAA8B,EAC9B,MAAc,EACd,iBAAoC;QAFpC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpD,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,iFAAc,CAAC,CAAC;IACvD,CAAC;IAED,4CAAQ,GAAR;QAAA,iBAWC;QAVG,wDAAwD;QACxD,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5D,EAAE,CAAC,CAAC,WAAW,IAAI,KAAK,CAAC,CAAC,CAAC;YACvB,gBAAgB;YAChB,IAAI,EAAE,GAAG,QAAQ,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;YACnC,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,EAAE,CAAC;iBACvC,IAAI,CAAC,YAAE,IAAI,YAAI,CAAC,KAAK,GAAG,EAAE,EAAf,CAAe,CAAC,CAAC;QACrC,CAAC;QACD,IAAI;YACA,IAAI,CAAC,KAAK,GAAG,IAAI,6EAAU,EAAE,CAAC;IACtC,CAAC;IAED,4CAAQ,GAAR;QAAA,iBAOC;QANG,sBAAsB;QACtB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;aAE9C,IAAI,CAAC,cAAM,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,EAAtC,CAAsC,CAAC;aAClD,KAAK,CAAC,eAAK,IAAI,YAAK,CAAC,KAAK,CAAC,EAAZ,CAAY,CAAC,CAAC;IAEtC,CAAC;IAxCL;QAAC,+EAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;YAClC,mCAAkD;YAClD,mCAAiD;SACpD,CAAC;;iCAAA;IAsCF,gCAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;AC/C8C;AAES;AAOxD;IAGI,kCAAoB,iBAAmC;QAAnC,sBAAiB,GAAjB,iBAAiB,CAAkB;QAFvD,gBAAW,GAAgB,EAAE,CAAC;IAG9B,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAOC;QANG,sBAAsB;QACtB,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE;aAClC,IAAI,CAAC,YAAE,IAAI,YAAI,CAAC,WAAW,GAAG,EAAE,EAArB,CAAqB,EAC7B,eAAK;YACD,KAAK,CAAC,KAAK,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IACf,CAAC;IAlBL;QAAC,+EAAS,CAAC;YACP,QAAQ,EAAE,uBAAuB;YACjC,mCAAiD;YACjD,mCAAgD;SACnD,CAAC;;gCAAA;IAgBF,+BAAC;;AAAD,CAAC;;;;;;;;;;;ACxBD,IAAY,cAGX;AAHD,WAAY,cAAc;IACtB,uCAAW,KAAK;IAChB,uCAAW,KAAK;AACpB,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;AAED;IAAA;IAOA,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACZmD;AAEoC;AAClD;AACqB;AACgC;AAC5B;AAE/D,IAAM,MAAM,GAAU;IAClB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mFAAmB;QAC9B,gBAAgB,EAAE,CAAC,sFAAmB,CAAC;QACvC,QAAQ,EAAE;YACN,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gHAAwB,EAAC;YAC/C,EAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,mHAAyB,EAAC;YACnD,EAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,mHAAyB,EAAC;SACtD;KACJ;CACJ,CAAC;AAMF;IAAA;IACA,CAAC;IALD;QAAC,8EAAQ,CAAC;YACN,OAAO,EAAE,CAAC,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,qEAAY,CAAC;SAC1B,CAAC;;+BAAA;IAEF,8BAAC;AAAD,CAAC;;;;;;;;AC1BD,mB;;;;;;;ACAA,mB;;;;;;;ACAA,wCAAwC,oBAAoB,yBAAyB,kBAAkB,kCAAkC,KAAK,+DAA+D,gCAAgC,qBAAqB,yBAAyB,2BAA2B,KAAK,6CAA6C,wBAAwB,KAAK,8CAA8C,2BAA2B,KAAK,oFAAoF,kCAAkC,KAAK,uCAAuC,+CAA+C,KAAK,iCAAiC,gCAAgC,qBAAqB,2BAA2B,KAAK,6CAA6C,wBAAwB,KAAK,8CAA8C,2BAA2B,KAAK,4CAA4C,0BAA0B,KAAK,K;;;;;;;ACAlgC,iP;;;;;;;ACAA,ytCAAytC,QAAQ,yuC;;;;;;;ACAjuC,gpBAAgpB,iBAAiB,2BAA2B,wBAAwB,2BAA2B,gBAAgB,yE","file":"1.chunk.js","sourcesContent":["import {NgModule} from \"@angular/core\";\r\nimport {ListDataSourcesComponent} from \"./list-data-sources/list-data-sources.component\";\r\nimport {DataSourceRoutingModule} from \"./data-source.routes\";\r\nimport {DataSourceComponent} from \"./data-source.component\";\r\nimport {DetailDataSourceComponent} from \"./detail-data-source/detail-data-source.component\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {SharedModule} from \"../shared/shared.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        FormsModule,\r\n        DataSourceRoutingModule\r\n    ],\r\n    declarations: [\r\n        DataSourceComponent,\r\n        ListDataSourcesComponent,\r\n        DetailDataSourceComponent\r\n    ]\r\n})\r\nexport class DataSourceModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data-source/data-source.module.ts","import {Injectable} from \"@angular/core\";\r\nimport {DataSource, DataSourceType} from \"../shared/model/data-source\";\r\nimport {Http, Response, RequestOptions} from \"@angular/http\";\r\nimport \"rxjs/add/operator/toPromise\";\r\nimport {UserService} from \"../shared/user.service\";\r\n\r\n@Injectable()\r\nexport class DataSourceService {\r\n\r\n    constructor(private http: Http, private userService: UserService) {\r\n    }\r\n\r\n    getDataSources(): Promise<DataSource[]> {\r\n        // cria o header de autorização\r\n        let headers = this.userService.createAuthorizationHeaders();\r\n        let options = new RequestOptions({headers: headers});\r\n\r\n        return this.http.get(\"http://localhost:8080/api/data-source\", options)\r\n            .toPromise()\r\n            .then(res => res.json()) // o objeto tem um enum\r\n            .catch(res => this.handleError(res));\r\n    }\r\n\r\n    getDataSourceById(id: number): Promise<DataSource> {\r\n        return new Promise<DataSource>(resolve => {\r\n            resolve(<DataSource>{\r\n                id: id,\r\n                name: \"teste\",\r\n                serviceType: DataSourceType.WMS,\r\n                url: \"teste\"\r\n            });\r\n        });\r\n    }\r\n\r\n    createDataSource(dataSource: DataSource): Promise<DataSource> {\r\n        // cria o header de autorização\r\n        let headers = this.userService.createAuthorizationHeaders();\r\n        let options = new RequestOptions({headers: headers});\r\n\r\n        return this.http.post(\"http://localhost:8080/api/data-source\", dataSource, options)\r\n            .toPromise()\r\n            .then(res => res.json()) // o objeto tem um enum\r\n            .catch(res => this.handleError(res));\r\n    }\r\n\r\n    private handleError(error: Response | any) {\r\n        // In a real world app, we might use a remote logging infrastructure\r\n        let errMsg: string;\r\n        if (error instanceof Response) {\r\n            const body = error.json() || '';\r\n            const err = body.error || JSON.stringify(body);\r\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n        } else {\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        console.error(errMsg);\r\n        return Promise.reject(errMsg);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/data-source/data-source.service.ts","import {Component, OnInit} from \"@angular/core\";\r\nimport {DataSourceService} from \"./data-source.service\";\r\n\r\n@Component({\r\n    selector: 'app-data-source',\r\n    templateUrl: './data-source.component.html',\r\n    styleUrls: ['./data-source.component.css'],\r\n    providers: [DataSourceService]\r\n})\r\nexport class DataSourceComponent implements OnInit {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data-source/data-source.component.ts","import {Component, OnInit} from \"@angular/core\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {DataSourceService} from \"../data-source.service\";\r\nimport {DataSource, DataSourceType} from \"../../shared/model/data-source\";\r\n\r\n@Component({\r\n    selector: 'app-detail-data-source',\r\n    templateUrl: './detail-data-source.component.html',\r\n    styleUrls: ['./detail-data-source.component.css']\r\n})\r\nexport class DetailDataSourceComponent implements OnInit {\r\n    dataSourceTypes: any[];\r\n\r\n    model: DataSource;\r\n\r\n    externalDataSource: boolean;\r\n\r\n    authenticationRequired: boolean;\r\n\r\n    constructor(private activatedRoute: ActivatedRoute,\r\n                private router: Router,\r\n                private dataSourceService: DataSourceService) {\r\n        this.dataSourceTypes = Object.keys(DataSourceType);\r\n    }\r\n\r\n    ngOnInit() {\r\n        // verifica se é para criar ou editar uma fonte de dados\r\n        let requestType = this.activatedRoute.snapshot.params['id'];\r\n        if (requestType != 'new') {\r\n            // faz a leitura\r\n            let id = parseInt(requestType, 10);\r\n            this.dataSourceService.getDataSourceById(id)\r\n                .then(ds => this.model = ds);\r\n        }\r\n        else\r\n            this.model = new DataSource();\r\n    }\r\n\r\n    onSubmit() {\r\n        // salva o datasources\r\n        this.dataSourceService.createDataSource(this.model)\r\n            // e redireciona para a lista de datasources\r\n            .then(() => this.router.navigate(['/data-source']))\r\n            .catch(error => alert(error));\r\n\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data-source/detail-data-source/detail-data-source.component.ts","import {Component, OnInit} from \"@angular/core\";\r\nimport {DataSource} from \"../../shared/model/data-source\";\r\nimport {DataSourceService} from \"../data-source.service\";\r\n\r\n@Component({\r\n    selector: 'app-list-data-sources',\r\n    templateUrl: './list-data-sources.component.html',\r\n    styleUrls: ['./list-data-sources.component.css']\r\n})\r\nexport class ListDataSourcesComponent implements OnInit {\r\n    dataSources:DataSource[] = [];\r\n\r\n    constructor(private dataSourceService:DataSourceService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        // pega os datasources\r\n        this.dataSourceService.getDataSources()\r\n            .then(ds => this.dataSources = ds,\r\n                error => {\r\n                    alert(error);\r\n                });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data-source/list-data-sources/list-data-sources.component.ts","export enum DataSourceType {\r\n    WMS = <any>\"WMS\",\r\n    WFS = <any>\"WFS\"\r\n}\r\n\r\nexport class DataSource {\r\n    id:number;\r\n    name:string;\r\n    serviceType:DataSourceType;\r\n    url:string;\r\n    login:string;\r\n    password:string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/model/data-source.ts","import {Routes, RouterModule} from \"@angular/router\";\r\n\r\nimport {ListDataSourcesComponent} from \"./list-data-sources/list-data-sources.component\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {DataSourceComponent} from \"./data-source.component\";\r\nimport {DetailDataSourceComponent} from \"./detail-data-source/detail-data-source.component\";\r\nimport {AdminUserRouteGuard} from \"../shared/user.route-guards\";\r\n\r\nconst routes:Routes = [\r\n    {\r\n        path: '',\r\n        component: DataSourceComponent,\r\n        canActivateChild: [AdminUserRouteGuard],\r\n        children: [\r\n            {path: '', component: ListDataSourcesComponent},\r\n            {path: ':id', component: DetailDataSourceComponent},\r\n            {path: 'new', component: DetailDataSourceComponent}\r\n        ]\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class DataSourceRoutingModule {\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/data-source/data-source.routes.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/data-source/data-source.component.css\n// module id = 1034\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/data-source/detail-data-source/detail-data-source.component.css\n// module id = 1035\n// module chunks = 1","module.exports = \"table[md-data-table] {\\r\\n    width: 100%;\\r\\n    text-align: left;\\r\\n    border: 0;\\r\\n    border-collapse: collapse;\\r\\n}\\r\\n\\r\\n/* regras para o header */\\r\\ntable[md-data-table] th {\\r\\n    color: rgba(0,0,0,0.54);\\r\\n    height: 56px;\\r\\n    font-size: 0.9em;\\r\\n    padding-left: 56px;\\r\\n}\\r\\n\\r\\ntable[md-data-table] th:first-child {\\r\\n    padding-left: 0;\\r\\n}\\r\\n\\r\\ntable[md-data-table] th:nth-child(2) {\\r\\n    padding-left: 24px;\\r\\n}\\r\\n\\r\\n/* regras para o corpo da tabela */\\r\\ntable[md-data-table] tbody tr:hover {\\r\\n    background-color: #eeeeee;\\r\\n}\\r\\n\\r\\ntable[md-data-table] tbody tr {\\r\\n    border-top: 1px solid rgba(0,0,0,0.12);\\r\\n}\\r\\n\\r\\ntable[md-data-table] td {\\r\\n    color: rgba(0,0,0,0.87);\\r\\n    height: 48px;\\r\\n    padding-left: 56px;\\r\\n}\\r\\n\\r\\ntable[md-data-table] td:first-child {\\r\\n    padding-left: 0;\\r\\n}\\r\\n\\r\\ntable[md-data-table] td:nth-child(2) {\\r\\n    padding-left: 24px;\\r\\n}\\r\\n\\r\\ntable[md-data-table] td[md-number] {\\r\\n    text-align: right;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/data-source/list-data-sources/list-data-sources.component.css\n// module id = 1036\n// module chunks = 1","module.exports = \"<md-sidenav-container class=\\\"viewport\\\">\\r\\n    <md-sidenav #sidenav mode=\\\"side\\\" opened=\\\"true\\\">\\r\\n        <app-nav></app-nav>\\r\\n    </md-sidenav>\\r\\n\\r\\n    <router-outlet></router-outlet>\\r\\n</md-sidenav-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/data-source/data-source.component.html\n// module id = 1042\n// module chunks = 1","module.exports = \"<h1>Nova Fonte de Dados Geográficos</h1>\\r\\n<hr/>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" target=\\\"_parent\\\">\\r\\n    <div class=\\\"pull-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Salvar</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\">Testar conexão</button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"content\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Nome</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" required [(ngModel)]=\\\"model.name\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"checkbox\\\">\\r\\n            <label>\\r\\n                <input type=\\\"checkbox\\\" name=\\\"externalDataSourceCheckbox\\\" [(ngModel)]=\\\"externalDataSource\\\">\\r\\n                Fonte de dados externa\\r\\n            </label>\\r\\n        </div>\\r\\n\\r\\n        <div [hidden]=\\\"!externalDataSource\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"serviceType\\\">Tipo de serviço</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"serviceType\\\" name=\\\"serviceType\\\" [(ngModel)]=\\\"model.serviceType\\\">\\r\\n                    <option *ngFor=\\\"let dsType of dataSourceTypes\\\" [value]=\\\"dsType\\\">{{dsType}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"url\\\">Endereço</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\" [(ngModel)]=\\\"model.url\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"checkbox\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"authenticationRequiredCheckbox\\\" [(ngModel)]=\\\"authenticationRequired\\\">\\r\\n                    Autenticação obrigatória\\r\\n                </label>\\r\\n            </div>\\r\\n\\r\\n            <div [hidden]=\\\"!authenticationRequired\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"username\\\">Usuário</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"model.login\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"password\\\">Senha</label>\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/data-source/detail-data-source/detail-data-source.component.html\n// module id = 1043\n// module chunks = 1","module.exports = \"<md-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z4\\\">\\r\\n    <span>Fontes de Dados Geográficos</span>\\r\\n    <span spacer></span>\\r\\n\\r\\n</md-toolbar>\\r\\n\\r\\n<section class=\\\"screen-actions\\\">\\r\\n    <a md-fab routerLink=\\\"/data-source/new\\\">\\r\\n        <md-icon>add</md-icon>\\r\\n    </a>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"screen-content\\\">\\r\\n    <table md-data-table>\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th>Nome</th>\\r\\n            <th>Tipo</th>\\r\\n            <th>Endereço</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let datasource of dataSources\\\">\\r\\n            <td>{{datasource.name}}</td>\\r\\n            <td>{{datasource.serviceType}}</td>\\r\\n            <td>{{datasource.url}}</td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/data-source/list-data-sources/list-data-sources.component.html\n// module id = 1044\n// module chunks = 1"],"sourceRoot":""}