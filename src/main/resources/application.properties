# configurações do spring security ----------------
security.blowfish = %$@#@!#g30cAA213#ck(398234

# Configurações da autenticação via OAuth2. Algumas dos valores das propriedades podem ser
# coletadas do endpoint de discovery do OpenID Connect. Caso o servidor suportar este endpoint
# ele pode ser acesado através da URL:
# - <endereço do servidor IdP do OIDC>/.well-known/openid-configuration
security.oauth2.client.client-id= # ID do cliente (aplicação)
security.oauth2.client.client-secret= # chave do cliente
security.oauth2.client.access-token-uri= # URL do endpoint para consulta do access-token do Oauth2
security.oauth2.client.user-authorization-uri= # URL do endpoint para solicitar a autorização para acesso
security.oauth2.client.authentication-scheme=header
security.oauth2.client.client-authentication-scheme=header
security.oauth2.resource.user-info-uri= # URL do endpoint para consulta das informações do usuário autorizado

# banco de dados ----------------------------------
spring.datasource.driver-class-name= # classe do driver do BD
spring.datasource.url= # endereço do BD
spring.datasource.username= # usuário com permissão de escrita no BD
spring.datasource.password= # senha do usuário
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=validate

# repositório de arquivos -------------------------
files.repository.path= # pasta onde o repositório de arquivos do sistema será armazenado